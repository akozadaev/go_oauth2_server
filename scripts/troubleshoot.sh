#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º

set -e

echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ OAuth2 —Å–µ—Ä–≤–µ—Ä–∞..."

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–∞
check_port() {
    local port=$1
    local service=$2
    echo -n "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ $port ($service): "
    if lsof -i :$port > /dev/null 2>&1; then
        echo "‚ùå –ó–ê–ù–Ø–¢"
        echo "  –ü—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç—É $port:"
        lsof -i :$port | head -5
        return 1
    else
        echo "‚úÖ –°–í–û–ë–û–î–ï–ù"
        return 0
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ –Ω–∞ –ø–æ—Ä—Ç—É
kill_port() {
    local port=$1
    echo "üî™ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–∞ –ø–æ—Ä—Ç—É $port..."
    lsof -ti :$port | xargs kill -9 2>/dev/null || true
    sleep 2
}

echo ""
echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ—Ä—Ç—ã
PORTS_OK=true

if ! check_port 5433 "PostgreSQL"; then
    PORTS_OK=false
    read -p "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç—É 5433? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        kill_port 5433
    fi
fi

if ! check_port 8080 "OAuth2 Server"; then
    PORTS_OK=false
    read -p "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç—É 8080? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        kill_port 8080
    fi
fi

echo ""
echo "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
else
    echo "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(docker --version)"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker Compose
if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
else
    echo "‚úÖ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(docker-compose --version)"
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo ""
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose down --remove-orphans 2>/dev/null || true

echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Dockerfile
if [ ! -f "Dockerfile" ]; then
    echo "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç Dockerfile"
    exit 1
else
    echo "‚úÖ Dockerfile –Ω–∞–π–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º docker-compose.yml
if [ ! -f "docker-compose.yml" ]; then
    echo "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç docker-compose.yml"
    exit 1
else
    echo "‚úÖ docker-compose.yml –Ω–∞–π–¥–µ–Ω"
fi

echo ""
echo "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤..."

# –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã
docker-compose build --no-cache

echo ""
echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
docker-compose up -d

echo ""
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 30

echo ""
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
docker-compose ps

echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º PostgreSQL
echo "PostgreSQL (5433):"
if nc -z localhost 5433; then
    echo "‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω"
else
    echo "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    echo "üìã –õ–æ–≥–∏ PostgreSQL:"
    docker-compose logs postgres
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º OAuth2 Server
echo "OAuth2 Server (8080):"
if nc -z localhost 8080; then
    echo "‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω"
else
    echo "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    echo "üìã –õ–æ–≥–∏ OAuth2 Server:"
    docker-compose logs oauth2-server
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º health endpoint
echo "üè• Health Check:"
if curl -s http://localhost:8080/health > /dev/null; then
    echo "‚úÖ Health endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå Health endpoint –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

echo ""
echo "‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üîß –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –æ—Å—Ç–∞–ª–∏—Å—å:"
echo "   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose logs"
echo "   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ: docker-compose restart"
echo "   - –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞: docker-compose down && docker-compose up --build"
