#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞

set -e

echo "üßπ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ OAuth2 —Å–µ—Ä–≤–µ—Ä–∞..."
echo ""

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose down --remove-orphans --volumes 2>/dev/null || true
docker stop oauth2-server oauth2-postgres oauth2-adminer 2>/dev/null || true
docker rm oauth2-server oauth2-postgres oauth2-adminer 2>/dev/null || true

# –£–¥–∞–ª–µ–Ω–∏–µ volumes (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
read -p "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ PostgreSQL? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ volumes..."
    docker volume rm go_oauth2_server_postgres_data 2>/dev/null || true
    echo "‚úÖ Volumes —É–¥–∞–ª–µ–Ω—ã"
fi

# –û—á–∏—Å—Ç–∫–∞ –æ–±—Ä–∞–∑–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
read -p "üßπ –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "üßπ –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤..."
    docker rmi go_oauth2_server_oauth2-server 2>/dev/null || true
    echo "‚úÖ –û–±—Ä–∞–∑—ã —É–¥–∞–ª–µ–Ω—ã"
fi

# –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤
echo "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤..."
docker-compose build --no-cache

# –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ PostgreSQL —Å–Ω–∞—á–∞–ª–∞
echo "üöÄ –ó–∞–ø—É—Å–∫ PostgreSQL..."
docker-compose up -d postgres

echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL (30 —Å–µ–∫—É–Ω–¥)..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL..."
if nc -z localhost 5433; then
    echo "‚úÖ PostgreSQL –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    echo "‚ùå PostgreSQL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    echo "üìã –õ–æ–≥–∏ PostgreSQL:"
    docker-compose logs postgres
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
echo "üóÑÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î..."
docker-compose exec postgres psql -U oauth2_user -d oauth2_db -c "SELECT version();" 2>/dev/null && echo "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —Ä–∞–±–æ—Ç–∞–µ—Ç" || echo "‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –ë–î"

# –ó–∞–ø—É—Å–∫ OAuth2 Server
echo "üöÄ –ó–∞–ø—É—Å–∫ OAuth2 Server..."
docker-compose up -d oauth2-server

echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ OAuth2 Server (30 —Å–µ–∫—É–Ω–¥)..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä–∫–∞ OAuth2 Server
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ OAuth2 Server..."
if nc -z localhost 8080; then
    echo "‚úÖ OAuth2 Server –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    echo "‚ùå OAuth2 Server –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    echo "üìã –õ–æ–≥–∏ OAuth2 Server:"
    docker-compose logs oauth2-server
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint
echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint:"
if curl -s http://localhost:8080/health > /dev/null; then
    echo "‚úÖ Health endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç"
    echo "üìä –û—Ç–≤–µ—Ç health endpoint:"
    curl -s http://localhost:8080/health | head -3
else
    echo "‚ùå Health endpoint –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    echo "üìã –õ–æ–≥–∏ OAuth2 Server:"
    docker-compose logs oauth2-server
    exit 1
fi

# –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
echo ""
echo "üìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker-compose ps

echo ""
echo "‚úÖ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"
echo ""
echo "üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:"
echo "   OAuth2 Server: http://localhost:8080"
echo "   Health Check:  http://localhost:8080/health"
echo "   PostgreSQL:    localhost:5433"
echo "   Adminer:       http://localhost:8081"
echo ""
echo "üìö –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   docker-compose logs        - –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
echo "   docker-compose ps          - —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
echo "   ./scripts/diagnose.sh      - –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞" 